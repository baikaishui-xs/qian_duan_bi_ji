知识点：接口代理（反向代理）

原理：使用 webpack-dev-server 开启的服务器来帮助我们完成请求，因为服务器访问服务器是没有跨域问题的，跨域问题只存在于浏览器

特性：
  1、只需要在 客户端 进行配置，无需配置 服务端，只需要让运维团队修改服务器的配置信息（修改 nginx 服务器配置）
  2、proxy 代理接口，仅在开发调试阶段生效，项目上线发布时，依旧需要 API 接口服务器开启 CORS 跨域资源共享
  3、代理把请求根路径替换为 devServer.proxy 属性的值，发起真正的数据请求
  4、代理把请求到的数据，转发给 axios

使用步骤：
  （1）配置接口代理
  （2）拦截 /api 接口
  （3）目标地址

-- App.vue
  mounted() {
    let url = "api/activity/servicetime";
    jsonp(url, (err, res) => {
      let result = res;
      this.data = result;
    })
  }
  

-- vue.config.js
  module.exports = {
    devServer: {
      host: 'localhost',  // 主机
      port: 8080,  // 端口
      proxy:{  // （1）配置接口代理
        '^/api': {  // （2）虚拟地址，拦截 /api 接口，并代理到目标地址中
          target: 'http://www.imooc.com',  // （3）目标地址
          changeOrigin: true, // 是否将主机头的原点更改为目标地址
          pathRewrite:{ // 重写路径
            '^/api': '' // 删除 /api
          },
          secure: false // （true 默认：只能代理到有证书的服务器上 https）（false：没有证书的服务器也能代理 http）
        }
      }
    },
  }