知识点：v-model 语法糖

<template>
  <div class="container">

    <!-- 获取原生事件的事件对象 -->
    <!-- 如果绑定函数 fn(e){}，e 是事件对象 -->
    <!-- 如果绑定的是js表达式 $event，$event 是事件对象 -->
    <h1 @click="$event.target.style.color='red'">父组件{{count}}</h1>

    <!-- 获取自定义事件的事件对象  -->
    <!-- 特性：自定义事件没有事件对象  -->
    <!-- 如果绑定函数 fn(data){}，data 是触发自定义事件的传参 -->
    <!-- 如果绑定的是js表达式 $event，$event 是触发自定义事件的传参 -->

    简写：当使用 v-bind 将数据传递给子组件，和 @update:自定义事件 通知父组件修改数据时，就可以简写
    <!-- <Son :modelValue="count" @update:modelValue="count=$event" /> -->
    <Son v-model="count" />  // 简写

  </div>
</template>
<script>
  import { ref } from 'vue'
  import Son from './Son.vue'
  export default {
    name: 'App',
    components: {
      Son
    },
    setup () {
      const count = ref(10)
      return { count }
    }
  }
</script>